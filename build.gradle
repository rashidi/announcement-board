import org.apache.tools.ant.filters.*

buildscript {
    ext {
        springBootVersion = '1.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('net.saliman:gradle-cobertura-plugin:2.0.0')
        classpath('org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1')
        classpath('com.moowork.gradle:gradle-node-plugin:0.8')
        classpath('com.moowork.gradle:gradle-grunt-plugin:0.6')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

war {
    baseName = 'announcement-board'
    version = '0.0.1-SNAPSHOT'
    archiveName = 'announcement-board.war'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.hibernate:hibernate-validator")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

processResources {
    filter ReplaceTokens, tokens: [
            "db.uri": project.property("db.uri"),
            "db.username": project.property("db.username"),
            "db.password": project.property("db.password")
    ]
}

apply from: 'bower.gradle'

cobertura.coverageFormats = ['html', 'xml']